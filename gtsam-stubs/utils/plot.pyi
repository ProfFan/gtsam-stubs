from mpl_toolkits.mplot3d import Axes3D as Axes3D
from typing import Any, Optional

def set_axes_equal(fignum: Any) -> None: ...
def ellipsoid(rx: Any, ry: Any, rz: Any, n: Any): ...
def plot_covariance_ellipse_3d(axes: Any, origin: Any, P: Any, scale: int = ..., n: int = ..., alpha: float = ...) -> None: ...
def plot_pose2_on_axes(axes: Any, pose: Any, axis_length: float = ..., covariance: Optional[Any] = ...) -> None: ...
def plot_pose2(fignum: Any, pose: Any, axis_length: float = ..., covariance: Optional[Any] = ..., axis_labels: Any = ...): ...
def plot_point3_on_axes(axes: Any, point: Any, linespec: Any, P: Optional[Any] = ...) -> None: ...
def plot_point3(fignum: Any, point: Any, linespec: Any, P: Optional[Any] = ..., axis_labels: Any = ...): ...
def plot_3d_points(fignum: Any, values: Any, linespec: str = ..., marginals: Optional[Any] = ..., title: str = ..., axis_labels: Any = ...) -> None: ...
def plot_pose3_on_axes(axes: Any, pose: Any, axis_length: float = ..., P: Optional[Any] = ..., scale: int = ...) -> None: ...
def plot_pose3(fignum: Any, pose: Any, axis_length: float = ..., P: Optional[Any] = ..., axis_labels: Any = ...): ...
def plot_trajectory(fignum: Any, values: Any, scale: int = ..., marginals: Optional[Any] = ..., title: str = ..., axis_labels: Any = ...) -> None: ...
def plot_incremental_trajectory(fignum: Any, values: Any, start: int = ..., scale: int = ..., marginals: Optional[Any] = ..., time_interval: float = ...) -> None: ...
