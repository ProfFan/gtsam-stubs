from typing import overload, Any
import numpy

class ConstantBias:
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, biasAcc: numpy.ndarray, biasGyro: numpy.ndarray) -> None: ...
    @overload
    def __init__(*args, **kwargs) -> None: ...
    def Expmap(self, *args, **kwargs) -> Any: ...
    def Logmap(self, *args, **kwargs) -> Any: ...
    def accelerometer(self) -> numpy.ndarray: ...
    def between(self, b: ConstantBias) -> ConstantBias: ...
    def compose(self, b: ConstantBias) -> ConstantBias: ...
    def correctAccelerometer(self, measurement: numpy.ndarray) -> numpy.ndarray: ...
    def correctGyroscope(self, measurement: numpy.ndarray) -> numpy.ndarray: ...
    def equals(self, expected: ConstantBias, tol: float) -> bool: ...
    def gyroscope(self) -> numpy.ndarray: ...
    def identity(self, *args, **kwargs) -> Any: ...
    def inverse(self) -> ConstantBias: ...
    def localCoordinates(self, b: ConstantBias) -> numpy.ndarray: ...
    def print_(self, s: str) -> None: ...
    def retract(self, v: numpy.ndarray) -> ConstantBias: ...
    def vector(self) -> numpy.ndarray: ...
